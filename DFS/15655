import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Main {
    static int N, M;
    static int[] map;
    static int[] arr;
    static boolean[] visited;
    static StringBuilder sb = new StringBuilder();
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());
        map = new int[N];
        arr = new int[M];
        visited = new boolean[N];

        st = new StringTokenizer(br.readLine());
        for(int i=0; i<N; i++){
            map[i] = Integer.parseInt(st.nextToken());
        }
        Arrays.sort(map);

        dfs(0,0);
        System.out.print(sb);
    }

    static void dfs(int current, int cnt) {
        //목적지인가?
        if(cnt == M){
            for(int i=0; i<M; i++){
                sb.append(arr[i]).append(' ');
            }
            sb.append('\n');

        }
        else {
            //열을 순회
            for(int i=current; i<N; i++){
                if(!visited[i]){
                    visited[i] = true;
                    arr[cnt] = map[i];
                    dfs(i+1, cnt+1);
                    visited[i] =false;
                }
                }
            }
        }
    }
