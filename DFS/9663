import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {
    static int N, cnt;
    static int[][] map;
    static int[] queenArr;
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        map = new int[N][N];
        queenArr = new int[N];
        dfs(0);
        System.out.println(cnt);
    }

    static void dfs(int y) {
        //목적지인가? 모든 행을 순회했는가
        if(y == N){
            cnt++;
        }
        else {
            //열을 순회
            for(int i=0; i<N; i++){
                queenArr[y] = i;
                //해당 위치에 퀸을 놓을 수 있다면
                if(check(y)){
                    dfs(y+1);
                }
            }
        }
    }

    static boolean check(int y){
        for(int i=0; i<y; i++){
            //같은 열에 있는지 판별
            if(queenArr[y] == queenArr[i])
                return false;

            /*
             * 대각선상에 놓여있는 경우
             * (열의 차와 행의 차가 같을 경우가 대각선에 놓여있는 경우다)
             */
            if(Math.abs(y-i) == Math.abs(queenArr[y]-queenArr[i]))
                return false;
        }
        return true;
    }
}
