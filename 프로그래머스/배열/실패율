import java.util.*;
class Solution {
    public int[] solution(int N, int[] stages) {
        // 1.스테이지에 도달했으나 아직 클리어하지 못한 플레이어 수
        int[] challengers = new int[N+2];
        for(int i=0; i<stages.length; i++) {
            challengers[stages[i]] += 1;
        }
        
        // 2. 스테이지에 도달한 플레이어 수 (스테이지1부터 시작)
        double total = stages.length;
        
        // 3.스테이지별 실패율 저장을 위한 HashMap 초기화
        HashMap<Integer, Double> fails = new HashMap<>();
        // 4.실패율 계산
        for(int i=1; i<=N; i++){
            if(challengers[i] == 0) { // 스테이지 도달한 유저가 없을 경우 실패율 0처리
                fails.put(i, 0.);
            } else {
                fails.put(i, challengers[i] / total);
                total -= challengers[i];
            }
        }
        
        // 5.실패율이 높은 스테이지부터 내림차순 정렬처리
        return fails.entrySet().stream()
            .sorted((o1,o2) -> Double.compare(o2.getValue(), o1.getValue()))
            .mapToInt(HashMap.Entry::getKey)
            .toArray();
    }
}
