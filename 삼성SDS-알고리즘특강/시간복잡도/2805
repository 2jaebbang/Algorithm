import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        StringTokenizer st = new StringTokenizer(br.readLine());

        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        int[] trees = new int[N];

        long max = 0;
        st = new StringTokenizer(br.readLine());

        for(int i=0; i<N; i++){
            trees[i] = Integer.parseInt(st.nextToken());
            max = Math.max(trees[i],max);
        }

        long s = 0;
        long e=max;
        long mid=0;
        long result = 0;

        while(true){
            long sum = 0;
            mid = (s+e) /2;
            for(int i=0; i<trees.length; i++){
                if(trees[i]>mid){
                    sum+=trees[i] - mid;
                }
            }
            //sum == M -> 정답, 탈출
            if(sum == M){
                result = mid;
                break;
            }
            //sum < M -> mid -> end
            else if(sum<M){
                e = mid-1;
            }
            //sum > M -> mid -> s, 정답 후보
            else {
                result = mid;
                s = mid+1;
            }
            //시작점이 끝점보다 커지면
            if(s>e){
                break;
            }
        }
        System.out.println(result);
    }
}
