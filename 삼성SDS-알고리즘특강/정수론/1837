import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

public class Main {
    static int MAX = 1000000;
    static int K;
    static char[] P;
    static boolean[] isNotPrime;
    static List<Integer> primes = new ArrayList<>();

    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(br.readLine());
        //나머지 연산을 위해 입력값을 문자 형태로 변환하여 배열에 저장.
        P = st.nextToken().toCharArray();
        K = Integer.parseInt(st.nextToken());

        isNotPrime = new boolean[MAX + 1];

        //소수연산
        for(int i=2; i< MAX + 1; i++){
            if(isNotPrime[i] == false){
                primes.add(i);
                for(int j=i*2; j<MAX+1; j+=i){
                    isNotPrime[j] = true;
                }
            }
        }

        for(int prime: primes){
            if(prime >= K){
                break;
            }
            if(checkIsBad(prime)){
                System.out.println("BAD "+ prime);
                return;
            }
        }
        System.out.println("GOOD");
    }

    static boolean checkIsBad(int x){
        int ret = 0;
        for(int i=0; i< P.length; i++){
            ret = (ret*10 + (P[i] - '0')) % x;
        }
        if(ret ==0){
            return true;
        } else {
            return false;
        }
    }
}
